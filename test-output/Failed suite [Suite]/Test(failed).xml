<?xml version="1.0" encoding="UTF-8"?>
<!-- Generated by org.testng.reporters.JUnitXMLReporter -->
<testsuite ignored="0" hostname="Zing4" failures="0" tests="1" name="Test(failed)" time="21.307" errors="0" timestamp="2024-07-17T12:47:27 IST">
  <testcase classname="Base.Gainon" name="@BeforeTest setup" time="21.237">
    <failure type="org.openqa.selenium.SessionNotCreatedException" message="Could not start a new session. Response code 500. Message: An unknown server-side error occurred while processing the command. Original error: Could not find a connected Android device in 20000ms 
Host info: host: &amp;apos;ZING4&amp;apos;, ip: &amp;apos;192.168.0.4&amp;apos;
Build info: version: &amp;apos;4.21.0&amp;apos;, revision: &amp;apos;79ed462ef4&amp;apos;
System info: os.name: &amp;apos;Windows 10&amp;apos;, os.arch: &amp;apos;amd64&amp;apos;, os.version: &amp;apos;10.0&amp;apos;, java.version: &amp;apos;17.0.9&amp;apos;
Driver info: io.appium.java_client.android.AndroidDriver
Command: [null, newSession {desiredCapabilities=Capabilities {appActivity: com.gainon.app.MainActivity, appPackage: com.gainon.app, automationName: UIAutomator2, deviceName: DN2101, platformName: ANDROID}, capabilities=[{appium:deviceName=DN2101, appium:automationName=UIAutomator2, appium:appActivity=com.gainon.app.MainActivity, platformName=ANDROID, appium:appPackage=com.gainon.app}]}]
Capabilities {appActivity: com.gainon.app.MainActivity, appPackage: com.gainon.app, automationName: UIAutomator2, deviceName: DN2101, platformName: ANDROID}">
      <![CDATA[org.openqa.selenium.SessionNotCreatedException: Could not start a new session. Response code 500. Message: An unknown server-side error occurred while processing the command. Original error: Could not find a connected Android device in 20000ms 
Host info: host: 'ZING4', ip: '192.168.0.4'
Build info: version: '4.21.0', revision: '79ed462ef4'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.9'
Driver info: io.appium.java_client.android.AndroidDriver
Command: [null, newSession {desiredCapabilities=Capabilities {appActivity: com.gainon.app.MainActivity, appPackage: com.gainon.app, automationName: UIAutomator2, deviceName: DN2101, platformName: ANDROID}, capabilities=[{appium:deviceName=DN2101, appium:automationName=UIAutomator2, appium:appActivity=com.gainon.app.MainActivity, platformName=ANDROID, appium:appPackage=com.gainon.app}]}]
Capabilities {appActivity: com.gainon.app.MainActivity, appPackage: com.gainon.app, automationName: UIAutomator2, deviceName: DN2101, platformName: ANDROID}
at org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:114)
at io.appium.java_client.remote.AppiumProtocolHandshake.createSession(AppiumProtocolHandshake.java:116)
at io.appium.java_client.remote.AppiumProtocolHandshake.createSession(AppiumProtocolHandshake.java:96)
at io.appium.java_client.remote.AppiumCommandExecutor.createSession(AppiumCommandExecutor.java:176)
at io.appium.java_client.remote.AppiumCommandExecutor.execute(AppiumCommandExecutor.java:237)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:518)
at io.appium.java_client.AppiumDriver.startSession(AppiumDriver.java:268)
at org.openqa.selenium.remote.RemoteWebDriver.<init>(RemoteWebDriver.java:161)
at io.appium.java_client.AppiumDriver.<init>(AppiumDriver.java:90)
at io.appium.java_client.AppiumDriver.<init>(AppiumDriver.java:102)
at io.appium.java_client.android.AndroidDriver.<init>(AndroidDriver.java:109)
at Base.Gainon.setup(Gainon.java:27)
... Removed 28 stack frames]]>
    </failure>
  </testcase> <!-- @BeforeTest setup -->
  <testcase classname="Base.TestGainon" name="start" time="0.001">
    <skipped/>
  </testcase> <!-- start -->
</testsuite> <!-- Test(failed) -->
